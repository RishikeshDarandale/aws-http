buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:gradlePlugin:1.6.0"
  }
}

apply plugin: "com.github.spotbugs"
// apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
  // Use jcenter for resolving your dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

dependencies {
  // This dependency is exported to consumers, that is to say found on their compile classpath.
  // api 'org.apache.commons:commons-math3:3.6.1'

  // This dependency is used internally, and not exposed to consumers on their own compile classpath.
  // implementation 'com.google.guava:guava:23.0'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4'
  implementation 'org.glassfish.jersey.core:jersey-client:2.26'

  // Use JUnit test framework
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-core:2.13.0'
}

jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
  }
}

// Enforce code coverage metrics
jacocoTestCoverageVerification {
  violationRules {
    rule {
      element = 'CLASS'
      excludes = ['io.github.rishikeshdarandale.aws.http.AbstractRequest']
      limit {
        counter = 'LINE'
        minimum = 0.8
      }
    }
    rule {
      element = 'CLASS'
      excludes = ['io.github.rishikeshdarandale.aws.http.AbstractRequest']
      limit {
        counter = 'BRANCH'
        minimum = 0.8
      }
    }
  }
}

check.dependsOn jacocoTestCoverageVerification
