buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'gradle.plugin.com.github.spotbugs:gradlePlugin:1.6.0'
    classpath 'net.researchgate:gradle-release:2.8.1'
  }
}

apply plugin: 'com.github.spotbugs'
// apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'net.researchgate.release'
apply plugin: 'signing'

repositories {
  jcenter()
}

dependencies {
  // This dependency is exported to consumers, that is to say found on their compile classpath.
  // api 'org.apache.commons:commons-math3:3.6.1'

  // This dependency is used internally, and not exposed to consumers on their own compile classpath.
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.0'
  implementation 'org.glassfish.jersey.core:jersey-client:3.0.0'

  // Use JUnit test framework
  testImplementation 'junit:junit:4.13'
  testImplementation 'org.mockito:mockito-core:3.3.3'
}

jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
  }
}

// Enforce code coverage metrics
jacocoTestCoverageVerification {
  violationRules {
    rule {
      element = 'CLASS'
      excludes = ['io.github.rishikeshdarandale.aws.http.AbstractRequest']
      limit {
        counter = 'LINE'
        minimum = 0.8
      }
    }
    rule {
      element = 'CLASS'
      excludes = ['io.github.rishikeshdarandale.aws.http.AbstractRequest']
      limit {
        counter = 'BRANCH'
        minimum = 0.8
      }
    }
  }
}
// invoke the coverage verification during check phase
check.dependsOn jacocoTestCoverageVerification

// Create a jar with javadoc
task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

// Create a jar with soruces
task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

// hook all the artifacts under artifacts task
artifacts {
  archives javadocJar, sourcesJar
}

// Signing task
signing {
  sign configurations.archives
}

/*
 * Upload the archives to the OSS Sonatype
 *
 * To upload the archives, need to set following properties in ~/.gradle/gradle.properties
 * ------------------------------------------------
 * signing.keyId=YourKeyId
 * signing.password=YourPublicKeyPassword
 * signing.secretKeyRingFile=PathToYourKeyRingFile

 * ossrhUsername=your-jira-id
 * ossrhPassword=your-jira-password
 * ------------------------------------------------
 */
def v_ossrhUsername="FOO"
def v_ossrhPassword="BAR"

if (project.hasProperty("ossrhUsername")) {
  v_ossrhUsername = ossrhUsername
}
if (project.hasProperty("ossrhPassword")) {
  v_ossrhPassword = ossrhPassword
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: v_ossrhUsername, password: v_ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: v_ossrhUsername, password: v_ossrhPassword)
      }

      pom.project {
        name 'aws-http'
        packaging 'jar'
        artifactId archivesBaseName
        version version
        description 'A fluent http client library for aws'
        url 'https://rishikeshdarandale.github.io/aws-http/'

        scm {
          connection 'scm:git:git://github.com/rishikeshdarandale/aws-http.git'
          developerConnection 'scm:git:git@github.com:rishikeshdarandale/aws-http.git'
          url 'https://github.com/rishikeshdarandale/aws-http'
        }

        licenses {
          license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
          }
        }

        developers {
          developer {
            id 'rishikeshdarandale'
            name 'Rishikesh Darandale'
            email 'rishikesh.darandale@gmail.com'
            url 'https://rishikeshdarandale.github.io'
          }
        }
      }
    }
  }
}

/*
 * For each release, push the released artifacts to OSS sonatype
 */
afterReleaseBuild.dependsOn uploadArchives
